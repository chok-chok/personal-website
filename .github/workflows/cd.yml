name: CD

on:
 release:
   types: [created]

jobs:
  test-backend:
    name: test backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run build --if-present
      - run: npm run test
    
  test-frontend:
    name: test frontend
    needs: test-backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run test

  build-and-deploy:
    name: Build and Deploy to K8S
    needs: test-frontend
    runs-on: ubuntu-latest

    env:
      HASH: $(git rev-parse --short "$GITHUB_SHA")
      SERVICE_NAME_FE: ${{ secrets.SERVICE_NAME_FE }}
      SERVICE_NAME_BE: ${{ secrets.SERVICE_NAME_BE }}
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
      GKE_ZONE: ${{ secrets.GKE_ZONE }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gloud CLI
    - uses: google-github-actions/setup-gcloud@master
      with: 
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.PROJECT_ID }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - run: |-
        gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

    - name: Build
      run: |-
        docker build ./frontend --tag eu.gcr.io/$PROJECT_ID/$SERVICE_NAME_FE:$GITHUB_SHA
        docker build ./frontend --tag eu.gcr.io/$PROJECT_ID/$SERVICE_NAME_FE:latest
        docker build ./backend --tag eu.gcr.io/$PROJECT_ID/$SERVICE_NAME_BE:$GITHUB_SHA
        docker build ./backend --tag eu.gcr.io/$PROJECT_ID/$SERVICE_NAME_BE:latest

    # Push image to Google Container Registry
    - name: Push image
      run: |-
        docker push eu.gcr.io/$PROJECT_ID/$SERVICE_NAME_FE:$GITHUB_SHA
        docker push eu.gcr.io/$PROJECT_ID/$SERVICE_NAME_FE:latest
        docker push eu.gcr.io/$PROJECT_ID/$SERVICE_NAME_BE:$GITHUB_SHA
        docker push eu.gcr.io/$PROJECT_ID/$SERVICE_NAME_BE:latest

    - name: Deploy 
      run: |-
        helm upgrade --install personal-website ./chart \
          --values ./chart/values-prod.yaml



